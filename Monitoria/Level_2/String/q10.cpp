/*10. Faça um programa que encontre o conjunto de 5 dígitos consecutivos na sequência
abaixo que gere o maior produto:
"7316717653133062491922511967442657474235534919493
49698352031277450632623957831801698480186947885184
38586156078911294949545950173795833195285320880551
11254069874715852386305071569329096329522744304355
76689664895044524452316173185640309871112172238311
36222989342338030813533627661428280644448664523874
93035890729629049156044077239071381051585930796086
67017242712188399879790879227492190169972088809377
66572733300105336788122023542180975125454059475224
35258490771167055601360483958644670632441572215539
75369781797784617406495514929086256932197846862248
28397224137565705605749026140797296865241453510047
48216637048440319989000889524345065854122758866688
11642717147992444292823086346567481391912316282458
61786645835912456652947654568284891288314260769004
22421902267105562632111110937054421750694165896040
80719840385096245544436298123098787992724428490918
88458015616609791913387549920052406368991256071760
60588611646710940507754100225698315520005593572972
57163626956188267042825248360082325753042075296345
0".*/

#include <iostream>
#include <cstdlib>
#include <cstring>

using namespace std;

int main()
{
    char str1[1001] = {"7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"};
    int produto, maior =0, i , j;
    int sequencia[5];

    for(i=0; i<996; i++)                        //evita-se ir até o final para evitar segmentation fault
    {
        produto = (str1[i]-48);                 //o produto inicial pelo primeiro numero da sequencia
        for(j=i+1; j<i+5; j++)                  //o loop começa a multiplicar os valoresa a partir do valor inicial do produto com o numero seguinte da quencia de 5
        {
            produto = produto * (str1[j]-48);   //diz-se que o numero q deve ser multiplicado é seu equivalente na tablea ascii, por isso a subtraçao por -48
        }
        if (produto>maior)                      // caso o valor resultante da multiplicação seja maior q o valor da variavel maior, guarda-se este valor
        {
            maior = produto;
            sequencia[0] = str1[i]-48;          // como existe uma condição para guardar o valor maior, acaba-se guardando a primeira ocorrencia do i, sabendo a posição do primeiro, soma-se valores a estas posições para determinar as proximas 4
            sequencia[1] = str1[i+1]-48;
            sequencia[2] = str1[i+2]-48;
            sequencia[3] = str1[i+3]-48;
            sequencia[4] = str1[i+4]-48;
        }
    }

    //IMPRESSAO
    cout<<"Maior: "<<maior<<"\n\n";
    cout<<"Sequencia: ";
    for(i=0; i<5; i++)
        cout<<sequencia[i]<<" ";

    cout<<"\n";
    //IMPRESSAO
    
    return 0;
}
